---
- set_fact:
    skip_ssl_flag: '--skip-ssl'
  when: ssl == 'none'

- set_fact:
    rds_flag: '--rds'
  when: rds == true

- name: Run acro-add-website
  shell: >
     export TERM=xterm-256color; /usr/bin/timeout 30s /bin/bash /usr/local/sbin/acro-add-website.sh --account {{ linux_owner }} --project {{ project }} --fqdn {{ nginx_primal_name }} --webroot {{ web_root_dir_name }} --php-version {{ php_version }} --responsible-person {{ responsible_person }} --mysql-allow-from {{ mysql_allow_from }} --mysql-host-address {{ mysql_host_address }} {{ skip_ssl_flag }} {{ rds_flag }}
  args:
    creates: /home/{{ linux_owner }}/.acro-add-website/{{ project }}

- name: Try and expand the primal name's Certificate to include nginx aliases and canonical name. If DNS is pointing at the machine for these names, the command will work.
#    /usr/local/bin/certbot-auto --no-self-upgrade certonly --non-interactive --webroot --agree-tos -w /var/www/letsencrypt  --email webmaster@acromedia.com --cert-name {{ nginx_primal_name }} --keep -d "{{ nginx_canonical_name }},{{ nginx_aliases |join(',') }},{{ nginx_primal_name }}"
  script:  scripts/certbot-wrapper
  args:
    executable: /bin/bash
  environment:
    INVENTORY_HOSTNAME: "{{ inventory_hostname }}"
    NGINX_PRIMAL_NAME: "{{ nginx_primal_name }}"
    NGINX_CANONICAL_NAME: "{{ nginx_canonical_name }}"
    NGINX_ALIASES: "{{ nginx_aliases |join(',') }}"
  when: deploy_env == 'production'
    and ssl == 'letsencrypt'
  register: letsencrypt_result
  ignore_errors: true

- name: Upload arbitrary customizations for the virtual host
  template:
    src: "{{ nginx_include_custom }}"
    dest: /etc/nginx/includes/{{ nginx_primal_name }}.customizations.conf
    owner: root
    group: root
    mode: 0644
    backup: true
  notify: safe reload nginx
  when: "nginx_include_custom | trim() != ''"

- name: Update nginx virtual host configuration for {{ nginx_primal_name }}
  template:
    src: "{{ role_path }}/templates/etc/nginx/sites-available/{{ deploy_env }}.{{ ssl }}.conf.j2"
    dest: /etc/nginx/sites-available/{{ nginx_primal_name }}
    backup: true
  notify:
    - safe reload nginx

- name: Enable (symlink) nginx virtual host configuration for {{ nginx_primal_name }}
  file:
    src: "/etc/nginx/sites-available/{{ nginx_primal_name }}"
    dest: "/etc/nginx/sites-enabled/{{ nginx_primal_name }}"
    state: link
  notify:
    - safe reload nginx
