#!/bin/bash
set -eu
set -o pipefail

source /usr/local/lib/acro/bash/functions.sh

## Ansible helper script to support nginx_aliases being optional.
## This would end up being way too convoluted to try and accomplish inside the playbook.

function main () {

  local GROOMED_DOMAINS_LIST=""
  GROOMED_DOMAINS_LIST=$(groom_list_of_domains)
  CMD="/usr/local/bin/certbot-auto"
  CMD="$CMD certonly"
  CMD="$CMD --no-self-upgrade"
  CMD="$CMD --non-interactive"
  CMD="$CMD --webroot"
  CMD="$CMD --webroot-path /var/www/letsencrypt"
  CMD="$CMD --agree-tos"
  if [ -n "$LE_EXPIRY_EMAIL" ]; then
    CMD="$CMD --email '${LE_EXPIRY_EMAIL}'"
  fi
  CMD="$CMD --cert-name ${NGINX_PRIMAL_NAME}"
  CMD="$CMD --keep"
  CMD="$CMD --domains ${GROOMED_DOMAINS_LIST}"
  (set -x && $CMD --dry-run && $CMD)

}

function groom_list_of_domains () {

  local DOMAINS

  local DOMAINS_LIST=${DOMAINS_LIST}
  if [ -n "${DOMAINS_LIST}" ]; then 
    DOMAINS=${DOMAINS_LIST}
  else 
    DOMAINS="${NGINX_PRIMAL_NAME},${NGINX_CANONICAL_NAME},${NGINX_ALIASES}"
  fi

  # Remove duplicate names
  DOMAINS=$(echo "$DOMAINS"|tr ',' '\n'|sort|uniq|tr '\n' ',')

  # Remove duplicated commas
  DOMAINS=$(echo "$DOMAINS"| tr --squeeze-repeats ',')

  # Remove beginning and ending commas
  DOMAINS=$(echo "$DOMAINS"| sed 's/^,//')
  DOMAINS=$(echo "$DOMAINS"| sed 's/,$//')

  echo "${DOMAINS}"
}

main "$@"
