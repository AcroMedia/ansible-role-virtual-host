# {{ ansible_managed }}
# See https://git.acromedia.com/acro/devops/ansible-role-virtual-host/tree/master/templates/etc/nginx/sites-available/ACCOUNT_PROJECT.le-ssl.wordpress.j2
server {
  listen {{ http_port }};
  server_name {{ nginx_canonical_name }} {{ nginx_aliases|join(' ') }} {{ nginx_primal_name }};
  access_log /var/log/vhosts/{{ linux_owner }}/{{ project }}/nginx-access.log;
  error_log /var/log/vhosts/{{ linux_owner }}/{{ project }}/nginx-error.log;
  include /etc/nginx/includes/letsencrypt-acme-challenge.conf;
  return {{ redirect_code }} https://{{ nginx_canonical_name }}$request_uri;
}

server {
  listen {{ https_port }} ssl;
  server_name {{ nginx_aliases|join(' ') }} {{ nginx_primal_name }};
  ssl_certificate /etc/letsencrypt/live/{{ nginx_primal_name }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ nginx_primal_name }}/privkey.pem;
  ssl_dhparam /usr/local/ssl/private/dhparams.pem;
  ssl_protocols TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
  ssl_prefer_server_ciphers on;
  ssl_stapling on;
  ssl_stapling_verify on;
  ssl_trusted_certificate /etc/letsencrypt/live/{{ nginx_primal_name }}/chain.pem;
  access_log /var/log/vhosts/{{ linux_owner }}/{{ project }}/nginx-access.log;
  error_log /var/log/vhosts/{{ linux_owner }}/{{ project }}/nginx-error.log;
  include /etc/nginx/includes/letsencrypt-acme-challenge.conf;
  return {{ redirect_code }} https://{{ nginx_canonical_name }}$request_uri;
}

server {
  listen {{ https_port }} ssl;
  server_name {{ nginx_canonical_name }};
  ssl_certificate /etc/letsencrypt/live/{{ nginx_primal_name }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ nginx_primal_name }}/privkey.pem;

  # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
  ssl_dhparam /usr/local/ssl/private/dhparams.pem;

  # modern configuration. tweak to your needs.
  ssl_protocols TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
  ssl_prefer_server_ciphers on;

  # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
  # Don't enable this unless you know what it does, and what the downside will be if you have to serve plain HTTP at some point.
  # add_header Strict-Transport-Security max-age=15768000;

  # OCSP Stapling ---
  # fetch OCSP records from URL in ssl_certificate and cache them
  ssl_stapling on;
  ssl_stapling_verify on;

  ## verify chain of trust of OCSP response using Root CA and Intermediate certs
  ssl_trusted_certificate /etc/letsencrypt/live/{{ nginx_primal_name }}/chain.pem;

  root /home/{{ linux_owner }}/www/{{ project }}/wwwroot;
  index index.html index.php;
  client_max_body_size 8m;

  access_log /var/log/vhosts/{{ linux_owner }}/{{ project }}/nginx-access.log;
  error_log /var/log/vhosts/{{ linux_owner }}/{{ project }}/nginx-error.log;

  # Needed for letsencrypt renewals. If not using a letsencrypt cert, this can be removed.
  include /etc/nginx/includes/letsencrypt-acme-challenge.conf;

  # Enable compression. This will help if you have, for instance, the advagg module
  # by serving Gzip versions of the files.
  gzip_static on;

  # Requests for this just clutters log files.
  location = /favicon.ico {
    log_not_found off;
    access_log off;
  }

  # Handle requests for robots.txt.
  # This conf file is symlinked to an environment-specific file, so we can have different behaviour depending on whether this machine is production or staging / development.
  include /etc/nginx/includes/robots.conf;

  # Very rarely should these ever be accessed outside of your lan
  location ~* \.(txt|log|sql|zip|gzip|gz|tar)$ {
    deny all;
  }

  # Other files that contain PHP, but shouldn't be served or processed directly
  location ~* \.(module|install|inc|theme|profile|engine|phar)$ {
    return 403;
  }

  # Dont allow requests for PHP files in parent directories
  location ~ \..*/.*\.php$ {
    return 403;
  }

  # Don't allow php to run from inside upload dirs. PHP Execution + Anonymous write = Hacked website.
  location ~ /sites/.*/files/.*\.php$ {
    return 403;
  }

  # Don't serve anything from private diretories. BTW these should really be outside of your web root anyway.
  location ~ ^/sites/.*/private/ {
    return 403;
  }

  # Block access to "hidden" files and directories whose names begin with a
  # period. This includes directories used by version control systems such
  # as Subversion or Git to store control files.
  location ~ (^|/)\. {
    return 403;
  }

  # Wordpress:
  # Deny access to any files with a .php extension in the uploads directory
  # Works in sub-directory installs and also in multisite network
  # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
  location ~* /(?:uploads|files)/.*\.php$ {
    deny all;
  }

#  # Wordpress optional:
#  # Restrict access sensitive locations by IP address
#  location /wp-admin {
#    include includes/whitelisted-ip-addresses.conf;
#    deny all;
#  }
#  Wordpress optional:
#  location = /wp-login.php {
#    include includes/whitelisted-ip-addresses.conf;
#    deny all;
#    include /etc/nginx/includes/account-project.php-fpm.conf;
#  }

  # Wordpress:
  # Deny all access to specific locations
  location = /wp-config.php {
    deny all;
    {% include 'ACCCOUNT_PROJECT.php-fpm.inc.j2' %}
  }
  location = /xmlrpc.php {
    deny all;
    {% include 'ACCCOUNT_PROJECT.php-fpm.inc.j2' %}
  }
  location /wp-json {
    deny all;
    {% include 'ACCCOUNT_PROJECT.php-fpm.inc.j2' %}
  }

  # Serve static content before getting PHP involved
  location / {
    try_files $uri $uri/ @rewrite;
  }

  # Wordpress:
  # Include the "?$args" part so non-default permalinks doesn't break when using query string
  location @rewrite {
    rewrite ^ {{ rewrite_target }}?$args;
  }

  # Dont spam log files, and cache static content forever.
  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }

  # PHP FPM on a socket
  location ~ \.php$ {
    {% include 'ACCCOUNT_PROJECT.php-fpm.inc.j2' %}
  }

}
