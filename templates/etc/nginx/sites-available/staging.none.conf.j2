# {{ ansible_managed }}
# See https://github.com/AcroMedia/ansible-role-virtual-host
# -> templates/etc/nginx/sites-available/staging.none.conf.j2

### STAGING ###
# For 'staging' sites, primal takes precedence over (does not redirect to) canonical, since DNS for canonical doesn't point to this machine.

{% for SRV in nginx_server_names %}

{% if SRV.type == 'primal' %}
# Primal
server {
  listen {{ http_port }};
  server_name {{ SRV.name }}{% for ALIAS in SRV.aliases | default([]) %}{{ ' ' + ALIAS.name }}{% endfor %};
  access_log {{ nginx_access_log_conf }};
  error_log /var/log/vhosts/{{ linux_owner }}/{{ project }}/nginx-error.log;
  include /etc/nginx/includes/letsencrypt-acme-challenge.conf;
  include /etc/nginx/includes/{{ linux_owner }}-{{ project }}.core.conf;
}

{% elif SRV.type == 'redirect' %}
# Redirect
server {
  listen {{ http_port }};
  server_name {{ SRV.name }}{% for ALIAS in SRV.aliases | default([]) %}{{ ' ' + ALIAS.name }}{% endfor %};
  access_log {{ nginx_access_log_conf }};
  error_log /var/log/vhosts/{{ linux_owner }}/{{ project }}/nginx-error.log;
  include /etc/nginx/includes/letsencrypt-acme-challenge.conf;
  location / {
    return {{ redirect_code }} {{ ((SRV.force_https | default(false)) or (always_redirect_to_https)) | ternary('https', 'http') }}://{{ SRV.target_name }}$request_uri;
  }
}

{% elif SRV.type == 'canonical' %}
# Canonical
server {
  listen {{ http_port }};
  server_name {{ SRV.name }}{% for ALIAS in SRV.aliases | default([]) %}{{ ' ' + ALIAS.name }}{% endfor %};
  access_log {{ nginx_access_log_conf }};
  error_log /var/log/vhosts/{{ linux_owner }}/{{ project }}/nginx-error.log;
  include /etc/nginx/includes/letsencrypt-acme-challenge.conf;
  include /etc/nginx/includes/{{ linux_owner }}-{{ project }}.core.conf;
}

{% endif %}

{% endfor %}
