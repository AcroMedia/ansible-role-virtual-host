# {{ ansible_managed }}
# See https://git.acromedia.com/acro/devops/ansible-role-virtual-host/tree/master/templates/etc/nginx/sites-available/staging.letsencrypt.j2

### STAGING ###
# For 'staging' sites, primal takes precedence over canonical, since DNS for canonical doesn't point to this machine.
# If primal and canonical are both the same, only primal will be used.

{% for SRV in nginx_server_names %}
{% if SRV.type == 'primal' %}

# Insecure primal (staging): Redirect to secure primal.
server {
  listen {{ http_port }};
  server_name {{ SRV.name }}{% for ALIAS in SRV.aliases | default([]) %}{{ ' ' + ALIAS.name }}{% endfor %};
  access_log {{ nginx_access_log_conf }};
  error_log /var/log/vhosts/{{ linux_owner }}/{{ project }}/nginx-error.log;
  include /etc/nginx/includes/letsencrypt-acme-challenge.conf;
  location / {
    return {{ redirect_code }} https://$host$request_uri;
  }
}
# Secure primal (staging): Serve.
server {
  listen {{ https_port }} {{ 'ssl http2' if nginx_http2 else 'ssl' }};
  server_name {{ SRV.name }}{% for ALIAS in SRV.aliases | default([]) %}{{ ' ' + ALIAS.name }}{% endfor %};
  {% include 'ssl.letsencrypt.inc.j2' %}
  access_log {{ nginx_access_log_conf }};
  error_log /var/log/vhosts/{{ linux_owner }}/{{ project }}/nginx-error.log;
  include /etc/nginx/includes/letsencrypt-acme-challenge.conf;
  include /etc/nginx/includes/{{ linux_owner }}-{{ project }}.core.conf;
}

{% elif SRV.type == 'redirect' %}

# Insecure redirect: Send the user to the specified destination over plain http, unless force_https is true.
# Keeping the browser on plain http prevents cert name errors during launches / migrations.
# Force_https cuts down on redirects when the site's behind a load balancer.
server {
  listen {{ http_port }};
  server_name {{ SRV.name }}{% for ALIAS in SRV.aliases | default([]) %}{{ ' ' + ALIAS.name }}{% endfor %};
  access_log {{ nginx_access_log_conf }};
  error_log /var/log/vhosts/{{ linux_owner }}/{{ project }}/nginx-error.log;
  include /etc/nginx/includes/letsencrypt-acme-challenge.conf;
  location / {
    {% if (SRV.force_https | default(false) ) %}
    return {{ redirect_code }} https://{{ SRV.target_name }}$request_uri;
    {% else %}
    return {{ redirect_code }} http://{{ SRV.target_name }}$request_uri;
    {% endif %}
  }
}

# Secure redirect: send to the specified destination on https.
# Expect SSL errors, since the name is not yet included in the certificate. DNS
# isnt expected to be pointing at the server in staging mode, so there's no way
# to register a LE SSL cert yet.
server {
  listen {{ https_port }} {{ 'ssl http2' if nginx_http2 else 'ssl' }};
  server_name {{ SRV.name }}{% for ALIAS in SRV.aliases | default([]) %}{{ ' ' + ALIAS.name }}{% endfor %};
  {% include 'ssl.letsencrypt.inc.j2' %}
  access_log {{ nginx_access_log_conf }};
  error_log /var/log/vhosts/{{ linux_owner }}/{{ project }}/nginx-error.log;
  include /etc/nginx/includes/letsencrypt-acme-challenge.conf;
  location / {
    return {{ redirect_code }} https://{{ SRV.target_name }}$request_uri;
  }
}

{% elif SRV.type == 'canonical' %}

# Insecure canonical (staging): Serve.
# The canonical name normally isn't used in staging mode. DNS isn't expected to point here.
# Anyone arriving with this name in staging mode is either using curl or has edited
# their hosts file, so SSL isn't a priority.
# Since DNS mus be pointed at the server before LetsEnrypt SSL cert registration takes place,
# serving instead of pushing to https prevents "invalid SSL" errors during the launch.
server {
  listen {{ http_port }};
  server_name {{ SRV.name }}{% for ALIAS in SRV.aliases | default([]) %}{{ ' ' + ALIAS.name }}{% endfor %};
  access_log {{ nginx_access_log_conf }};
  error_log /var/log/vhosts/{{ linux_owner }}/{{ project }}/nginx-error.log;
  include /etc/nginx/includes/letsencrypt-acme-challenge.conf;
  include /etc/nginx/includes/{{ linux_owner }}-{{ project }}.core.conf;
}

# Secure canonical (staging). Serve.
# Expect SSL errors, since the canonical name is won't be included in the certificate.
server {
  listen {{ https_port }} {{ 'ssl http2' if nginx_http2 else 'ssl' }};
  server_name {{ SRV.name }}{% for ALIAS in SRV.aliases | default([]) %}{{ ' ' + ALIAS.name }}{% endfor %};
  {% include 'ssl.letsencrypt.inc.j2' %}
  access_log {{ nginx_access_log_conf }};
  error_log /var/log/vhosts/{{ linux_owner }}/{{ project }}/nginx-error.log;
  include /etc/nginx/includes/letsencrypt-acme-challenge.conf;
  include /etc/nginx/includes/{{ linux_owner }}-{{ project }}.core.conf;
}

{% endif %}

{% endfor %}
